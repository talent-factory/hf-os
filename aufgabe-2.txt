Aufgabe 2 – Speicherfragmentierung und Lösungsansätze

Unterschied zwischen interner und externer Fragmentierung

Interne Fragmentierung
Tritt auf, wenn einem Prozess ein Speicherblock zugewiesen wird, der größer ist als benötigt. Der nicht genutzte Rest im Block ist verschwendet.
Beispiel: Ein Prozess benötigt 3,5 KB, bekommt aber 4 KB – 0,5 KB sind intern fragmentiert.

Externe Fragmentierung
Entsteht, wenn viele kleine freie Bereiche im RAM vorhanden sind, die zusammen zwar genug Speicher hätten, aber nicht zusammenhängend sind.
Beispiel: Nach vielen Programmstarts und -enden bleiben verstreute freie Blöcke zurück, ein 8 KB-Prozess passt aber in keinen einzelnen.

Strategien zur Reduktion oder Vermeidung von Fragmentierung

Strategie 1: Paging
Der physische Speicher wird in gleich große Seitenrahmen unterteilt (z. B. 4 KB). Prozesse erhalten nicht zusammenhängende Seiten.
Vorteile:

Externe Fragmentierung entfällt

Flexible Allokation
Nachteile:

Interne Fragmentierung bei nicht vollständig genutzten Seiten

Verwaltungsaufwand (Seitentabellen)

Strategie 2: Speicherkompaktierung (Memory Compaction)
Verschiebt belegte Speicherblöcke, um größere zusammenhängende freie Bereiche zu schaffen.
Vorteile:

Externe Fragmentierung wird beseitigt

Große Prozesse können ausgeführt werden
Nachteile:

Aufwendig in CPU-Zeit

Nicht praktikabel für Echtzeitsysteme

Fazit:
Paging ist in den meisten modernen Betriebssystemen Standard, weil es effizienter und hardwareunterstützt ist. Kompaktierung ist eher ein Spezialfall für Systeme mit weniger dynamischer Speicherverwaltung.


