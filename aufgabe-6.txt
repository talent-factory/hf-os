#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <fcntl.h>
#include <unistd.h>

void print_file_metadata(const char* filename) {
    struct stat file_info;

    if (stat(filename, &file_info) != 0) { // stat() ruft Metadaten zur Datei ab
        perror("stat"); // Fehlerausgabe falls stat fehlschlägt
        return;
    }

    printf("Metadaten für Datei: %s\n", filename);
    printf("------------------------\n");

    printf("Dateigrösse: %ld Bytes\n", file_info.st_size); // Dateigrösse
    printf("Inode-Nummer: %ld\n", file_info.st_ino); // Eindeutige ID der Datei
    printf("Anzahl Hardlinks: %ld\n", file_info.st_nlink); // Anzahl der Links zum Inode
    printf("Zugriffsrechte: %o (Oktal)\n", file_info.st_mode & 0777); // Dateirechte

    char time_str[30];
    strftime(time_str, sizeof(time_str), "%Y-%m-%d %H:%M:%S", localtime(&file_info.st_atime)); // Zugriff
    printf("Letzter Zugriff: %s\n", time_str);

    strftime(time_str, sizeof(time_str), "%Y-%m-%d %H:%M:%S", localtime(&file_info.st_mtime)); // Änderung
    printf("Letzte Änderung: %s\n", time_str);

    printf("\n");
}

int main() {
    const char* filename = "testdatei.txt"; // Name der Originaldatei
    const char* content = "Dies ist ein Test für Dateioperationen.\n"
                          "Wir untersuchen, wie Dateisysteme Metadaten verwalten.\n"; // Initialer Inhalt

    FILE* file = fopen(filename, "w"); // Datei zum Schreiben öffnen
    if (file == NULL) {
        perror("Fehler beim Öffnen der Datei");
        return 1;
    }

    fprintf(file, "%s", content); // Inhalt schreiben
    fclose(file); // Datei schliessen

    printf("Metadaten vor der Änderung:\n");
    print_file_metadata(filename); // Metadaten vor Änderung anzeigen

    file = fopen(filename, "a"); // Datei im Anhang-Modus öffnen
    if (file == NULL) {
        perror("Fehler beim Öffnen der Datei zum Anhängen");
        return 1;
    }

    fprintf(file, "Zusätzlicher Text wurde angehängt.\n"); // Zusatztext anhängen
    fclose(file); // Datei schliessen

    printf("Metadaten nach der Änderung:\n");
    print_file_metadata(filename); // Metadaten nach Änderung anzeigen

    const char* hardlink_name = "testdatei_hardlink.txt"; // Name des Hardlinks
    if (link(filename, hardlink_name) != 0) { // Hardlink erstellen
        perror("Fehler beim Erstellen des Hardlinks");
    }

    printf("Hardlink erstellt: %s\n", hardlink_name);
    printf("Metadaten des Hardlinks:\n");
    print_file_metadata(hardlink_name); // Metadaten des Links anzeigen

    remove(filename); // Original löschen
    remove(hardlink_name); // Hardlink löschen

    return 0;
}

// Antworten zu den Aufgaben

// 1 Welche Änderungen an den Metadaten beobachten Sie nach dem Anhängen von Text  
// Die Dateigrösse wird grösser  
// Das Änderungsdatum st_mtime ändert sich  
// Der Inode bleibt gleich weil es dieselbe Datei ist  
// Zugriffsrechte und Anzahl Hardlinks bleiben gleich  

// 2 Unterschied zwischen Inode Nummer und Dateiname  
// Der Dateiname ist nur ein Verweis auf einen Inode  
// Die Inode Nummer ist die eindeutige Kennung einer Datei im Dateisystem  
// Wenn zwei Dateien die gleiche Inode Nummer haben sind es Hardlinks  
// Sie zeigen beide auf denselben Speicherbereich  
// Inhalt und Metadaten sind identisch  

// 3 Verhalten bei symbolischem Link  
// Ein Symlink zeigt auf den Pfad der Originaldatei  
// Wenn die Originaldatei gelöscht wird zeigt der Symlink ins Leere  
// Ein Symlink hat einen eigenen Inode und eigene Metadaten  
// Ein Hardlink dagegen bleibt auch nach dem Löschen des Originals funktionsfähig solange ein Link übrig bleibt
