mkdir -p test/subdir && cd test

Beschreibung:
Erstellt das Verzeichnis test und darin das Unterverzeichnis subdir. Falls test noch nicht existiert, wird es ebenfalls angelegt (-p). Der Wechsel in das Verzeichnis test erfolgt nur, wenn die Erstellung erfolgreich war (&&).

Zugrundeliegende Konzepte:
	•	Verzeichnisse sind spezielle Dateien, die andere Dateien referenzieren.
	•	Das UNIX-Dateisystem verwendet eine hierarchische Struktur.
	•	Der Operator && verknüpft zwei Kommandos logisch – das zweite wird nur ausgeführt, wenn das erste erfolgreich ist.


echo "Inhalt-$(date +%s)" > original.txt

Beschreibung:
Schreibt einen Text mit Zeitstempel in die Datei original.txt. Existiert die Datei nicht, wird sie neu erstellt; existiert sie, wird sie überschrieben.

Zugrundeliegende Konzepte:
	•	Standardausgabe wird mit > in eine Datei umgeleitet.
	•	Dynamische Inhalte können per Shell-Substitution ($(...)) erzeugt werden.
	•	Dateien werden bei der ersten Ausgabe automatisch angelegt oder ersetzt.


ln -s original.txt symlink.txt

Beschreibung:
Erstellt einen symbolischen Link namens symlink.txt, der auf original.txt zeigt.

Zugrundeliegende Konzepte:
	•	Symbolische Links speichern Pfadangaben, nicht den Inode der Zieldatei.
	•	Der Link ist unabhängig vom tatsächlichen Vorhandensein der Zieldatei (kann ins Leere zeigen).
	•	Symlinks haben eigene Inodes und Metadaten.


ln original.txt hardlink.txt

Beschreibung:
Erstellt einen Hardlink hardlink.txt, der auf dieselbe Datei wie original.txt verweist. Beide Dateinamen zeigen auf denselben Inode.

Zugrundeliegende Konzepte:
	•	Hardlinks referenzieren denselben Inode; es handelt sich um identische Dateien mit verschiedenen Namen.
	•	Die Datei bleibt bestehen, solange mindestens ein Hardlink vorhanden ist.
	•	Änderungen an Inhalt oder Metadaten (z. B. chmod) wirken sich auf beide Namen aus.

⸻

chmod 640 original.txt

Beschreibung:
Setzt die Zugriffsrechte von original.txt auf: Besitzer darf lesen und schreiben, Gruppenmitglieder dürfen nur lesen, andere Benutzer haben keinen Zugriff.

Zugrundeliegende Konzepte:
	•	Zugriffsrechte werden im Inode gespeichert und in Oktalnotation angegeben (hier: rw- r– —).
	•	UNIX trennt Berechtigungen für Benutzer, Gruppe und andere.
	•	Das chmod-Kommando steuert diese Zugriffsrechte.


touch -d "2 days ago" original.txt

Beschreibung:
Ändert den Änderungszeitpunkt (mtime) der Datei original.txt auf das angegebene Datum („vor 2 Tagen“). Der Inhalt bleibt unverändert.

Zugrundeliegende Konzepte:
	•	Dateien besitzen mehrere Zeitstempel: atime, mtime, ctime.
	•	touch kann Metadaten manipulieren, ohne den Inhalt zu verändern.
	•	Diese Daten werden vom Dateisystem im Inode verwaltet.


ls -la

Beschreibung:
Listet alle Dateien und Verzeichnisse im aktuellen Pfad in Langform auf, inklusive versteckter Dateien. Zeigt Typ, Rechte, Größe, Zeitstempel, Inode-Informationen und Verknüpfungen.

Zugrundeliegende Konzepte:
	•	Die Ausgabe zeigt unterschiedliche Dateitypen: reguläre Datei (-), Verzeichnis (d), symbolischer Link (l).
	•	Die Anzahl der Hardlinks wird über den Link-Count im Inode angezeigt.
	•	Symlinks zeigen den Pfad zur Zieldatei an (symlink.txt -> original.txt).
	
	
	
	
LB2 git:(hfi2024c/kristian-bilus) ✗ ls -la
insgesamt 80
drwxr-xr-x 3 vmadmin vmadmin  4096 Mai 10 08:36 .
drwxr-xr-x 3 vmadmin vmadmin  4096 Mai  9 22:58 ..
-rw-rw-r-- 1 vmadmin vmadmin  2442 Mai 10 08:31 aufgabe2.txt
-rw-rw-r-- 1 vmadmin vmadmin  3261 Mai 10 08:36 aufgabe3.txt
drwxr-xr-x 8 vmadmin vmadmin  4096 Mai 10 08:23 .git
-rw-rw-r-- 1 vmadmin vmadmin 53944 Mai 10 08:23 LB2-FS25.html
-rw-r--r-- 1 vmadmin vmadmin     7 Mai  9 22:58 README.md

Analyse der Ausgabe von ls -la

Bedeutung der Spalten:
	•	Dateityp und Zugriffsrechte:
Der erste Eintrag gibt den Dateityp und die Zugriffsrechte an. Ein führendes Zeichen - kennzeichnet eine reguläre Datei, ein d ein Verzeichnis. Es folgen drei Gruppen zu je drei Zeichen: Rechte für den Besitzer, die Gruppe und andere Benutzer. Die Zeichen r, w, x stehen für lesen, schreiben und ausführen.
	•	Link-Zahl:
Die zweite Spalte zeigt die Anzahl der Hardlinks, also wie viele Dateinamen auf denselben Inode verweisen.
	•	Besitzer und Gruppe:
Die dritte und vierte Spalte geben den Benutzer und die Benutzergruppe an, denen die Datei gehört.
	•	Dateigröße:
Die fünfte Spalte zeigt die Größe der Datei in Bytes an.
	•	Zeitstempel:
Die nächsten drei Spalten (Datum und Uhrzeit) geben den Zeitpunkt der letzten Inhaltsänderung an (mtime).
	•	Dateiname:
Die letzte Spalte ist der Name der Datei oder des Verzeichnisses.


Unterschiede zwischen den Dateien:
	•	Zugriffsrechte:
Die Datei README.md hat die Rechte -rw-r--r--. Das bedeutet: der Eigentümer darf lesen und schreiben, Gruppe und andere dürfen nur lesen.
Die Dateien aufgabe2.txt, aufgabe3.txt und LB2-FS25.html haben -rw-rw-r--. Hier dürfen sowohl Eigentümer als auch Gruppenmitglieder lesen und schreiben, andere dürfen nur lesen.
	•	Zeitstempel:
Die Datei aufgabe3.txt wurde zuletzt am 10. Mai um 08:36 geändert.
aufgabe2.txt wurde am 10. Mai um 08:31 geändert.
LB2-FS25.html wurde am 10. Mai um 08:23 geändert.
README.md wurde bereits am 9. Mai um 22:58 geändert.
Der Zeitstempel bezieht sich jeweils auf die letzte Änderung des Dateiinhalts (mtime).
	•	Inodes:
Die Inode-Nummern werden in der Ausgabe von ls -la nicht angezeigt. Um diese zu sehen, müsste der Befehl ls -lai verwendet werden.
Da alle Dateien in der vorliegenden Ausgabe jeweils nur eine Link-Zahl von 1 haben, ist davon auszugehen, dass es sich um eigenständige Dateien mit jeweils eigenen Inodes handelt. Es sind keine Hardlinks sichtbar.

Erklärung zu gleichen und unterschiedlichen Inode-Nummern:
	•	Wenn mehrere Dateinamen auf dieselbe Inode-Nummer verweisen, handelt es sich um Hardlinks. Diese verweisen auf denselben Datenblock im Dateisystem, haben also denselben Inhalt und dieselben Metadaten.
	•	Dateien mit unterschiedlichen Inode-Nummern wurden unabhängig voneinander erstellt und sind physisch separate Objekte im Dateisystem.
	•	Symbolische Links besitzen grundsätzlich einen eigenen Inode. Sie verweisen nicht auf einen Inode, sondern auf den Pfad einer Datei.
